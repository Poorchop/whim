#!/usr/bin/env perl

use warnings;
use strict;

use FindBin;
use lib
    "$FindBin::Bin/../lib",
    ;

use Mojolicious::Lite;
use Try::Tiny;

use Brisote;

use Readonly;
Readonly my $OK          => 200;
Readonly my $ACCEPTED    => 202;
Readonly my $BAD_REQUEST => 400;

$ENV{MOJO_MODE} ||= 'production';

my $brisote = Brisote->new( { data_directory => "$FindBin::Bin/../data" } );

post '/' => sub {
    my $c = shift;

    my $webmention;
    try {
        $webmention = Web::Mention->new_from_request($c);
    }
    catch {
        $c->render(
            status => $BAD_REQUEST,
            text   => "Malformed webmention: $_"
        );
        app->log->info('Rejected a malformed webmention.');
    };
    return unless $webmention;

    # Pull out the source and target params, mostly for logging
    my $source = $c->param('source');
    my $target = $c->param('target');

    # XXX For the present, naively accept all webmentions.
    #     This is technically legal under section 3.2.1 of the spec.
    #     But it SHOULD check against some stored config about whether
    #     it cares about the target URL at all.
    unless (1) {
        my $error_text = "Unrecognized target URL: $target";
        $c->render(
            status => $BAD_REQUEST,
            text   => $error_text
        );
        app->log->info($error_text);
        return;
    }

    my $success_text = "Webmention accepted, and queued for verification and "
        . "processing. Thank you!";

    my $return_link_text = 'Return to previous page.';
    $success_text .= qq{ <a href="$target">$return_link_text</a>};

    $c->render( status => $ACCEPTED, text => $success_text );

    app->log->info("Accepted: $source -> $target");

    $brisote->receive_webmention($webmention);
};

get '/' => sub {
    my $c = shift;

    $c->render( status => $OK, text => 'OK (listening for webmentions)' );
};

app->start('daemon', @ARGV);

=head1 NAME

wmd - Brisote's daemon

=head1 SYNOPSIS

  wmd
  wmd -m production -l http://*:8080
  wmd -l http://127.0.0.1:8080 -l https://[::]:8081
  wmd -l 'https://*:443?cert=./server.crt&key=./server.key'
  wmd -l http+unix://%2Ftmp%2Fmyapp.sock

=head1 DESCRIPTION

A webmention listener.

Further details TBA.
